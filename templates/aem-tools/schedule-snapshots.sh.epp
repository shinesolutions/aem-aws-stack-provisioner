#!/usr/bin/env bash
set -o nounset
set -o errexit

if [ "$#" -ne 2 ]; then
  echo 'Usage: ./schedule-snapshots.sh <live_snapshot | offline_snapshot | offline_compaction_snapshot> <enable | disable>'
  exit 1
fi

# translate exit code to follow convention
translate_exit_code() {

  exit_code="$1"
  if [ "$exit_code" -eq 0 ]; then
    exit_code=0
  elif [ "$exit_code" -eq 3 ]; then
    exit_code=3
  else
    rm -rf "${tmp_dir:?}/*"
    exit "$exit_code"
  fi

  return "$exit_code"
}

# translate puppet exit code to follow convention
translate_puppet_exit_code() {

  exit_code="$1"
  if [ "$exit_code" -eq 0 ] || [ "$exit_code" -eq 2 ]; then
    exit_code=0
  else
    rm -rf "${tmp_dir:?}/*"
    exit "$exit_code"
  fi

  return "$exit_code"
}

PATH=<%= $aem_tools_env_path %>
tmp_dir=<%= $tmp_dir %>/schedule_snapshot

component=$(facter component)
scheduled_job_name=$1
scheduled_job_state=$2

case "$scheduled_job_state" in
  enable)
    scheduled_job_state=True
  ;;
  disable)
    scheduled_job_state=False
  ;;
  *)
    exit 1
  ;;
esac

set +o errexit

mkdir -p $tmp_dir

# Download latest local.yaml file
cd "<%= $base_dir %>"
aws s3 cp "s3://<%= $data_bucket_name %>/<%= $stack_prefix %>/data/local.yaml" "${tmp_dir}/local.yaml"

# Determine component to update local.yaml
case "$scheduled_job_name" in
  live_snapshot)
    case "$component" in
      author-primary)
        aem_component=author_primary
      ;;
      author-standby)
        aem_component=author_standby
      ;;
      publish)
        aem_component=publish
      ;;
      author-publish-dispatcher)
        aem_component=publish
      ;;
      *)
        aem_component=aem_orchestrator
      ;;
    esac
  ;;
  *)
    aem_component=aem_orchestrator
  ;;
esac

# Update local.yaml
cd "<%= $base_dir %>/aws-tools/"

<%= $base_dir %>/aws-tools/update_hiera.py --file "${tmp_dir}/local.yaml" \
  --parameter "${aem_component}::scheduled_jobs::enable::${scheduled_job_name}" \
  --parameter-value ${scheduled_job_state} \
  --action change \
  --dest-file "${tmp_dir}/local.yaml"

translate_exit_code "$?"

if [ "$exit_code" -eq 3 ]; then
  <%= $base_dir %>/aws-tools/update_hiera.py --file "${tmp_dir}/local.yaml" \
    --parameter "${aem_component}::scheduled_jobs::enable::${scheduled_job_name}" \
    --parameter-value ${scheduled_job_state} \
    --action add \
    --dest-file "${tmp_dir}/local.yaml"

  translate_exit_code "$?"
fi

# Upload new local.yaml file to S3
aws s3 cp "${tmp_dir}/local.yaml" "s3://<%= $data_bucket_name %>/<%= $stack_prefix %>/data/local.yaml"
translate_exit_code "$?"

# Replace existing local.yaml in aem-aws-stack-provisioner directory
mv -f "${tmp_dir}/local.yaml" <%= $base_dir %>/aem-aws-stack-provisioner/data/local.yaml
translate_exit_code "$?"

cd "<%= $base_dir %>/aem-aws-stack-provisioner/"
# Applying action-scheduled-job Puppet manifest
echo "Applying action-scheduled-job Puppet manifest..."
puppet apply \
  --detailed-exitcodes \
  --debug \
  --modulepath modules \
  --hiera_config conf/hiera.yaml \
  manifests/action-scheduled-jobs.pp

translate_puppet_exit_code "$?"

case "$scheduled_job_state" in
  True)
    case "$scheduled_job_name" in
      live_snapshot)
        echo "Testing if scheduled job live-snapshot is enabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-live-snapshot-enabled

        translate_exit_code "$?"
      ;;
      offline_snapshot)
        echo "Testing if scheduled job offline-snapshot is enabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-offline-snapshot-enabled

        translate_exit_code "$?"
      ;;
      offline_compaction_snapshot)
        echo "Testing if scheduled job offline-compaction-snapshot is enabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-offline-compaction-snapshot-enabled

        translate_exit_code "$?"
      ;;
      *)
        exit 1
      ;;
    esac
    ;;
  False)
    case "$scheduled_job_name" in
      live_snapshot)
        echo "Testing if scheduled job live-snapshot is disabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-live-snapshot-disabled

        translate_exit_code "$?"
      ;;
      offline_snapshot)
        echo "Testing if scheduled job offline-snapshot is disabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-offline-snapshot-disabled

        translate_exit_code "$?"
      ;;
      offline_compaction_snapshot)
        echo "Testing if scheduled job offline-compaction-snapshot is disabled using InSpec..."
        cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
        HOME=/root \
          inspec exec . --controls aws-scheduled-job-offline-compaction-snapshot-disabled

        translate_exit_code "$?"
      ;;
      *)
        exit 1
      ;;
    esac
    ;;
  *)
    exit 1
  ;;
esac

rm -rf "${tmp_dir:?}/*"
